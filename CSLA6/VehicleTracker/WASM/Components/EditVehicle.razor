<h3>Edit Vehicle</h3>

<div>
	<EditForm Model="ViewModel.Model" OnValidSubmit="ViewModel.AcceptModelEditAsync" autocomplete="off">
		<CslaValidator />
		<div>
			<div class="form-field">
				<label for="NickName" class="form-label">NickName:</label>
				<div class="form-input-container">
					<InputText Id="NickName" @bind-Value="ViewModel.Model.NickName" aria-describedby="NickNameMessages" 
								class="form-input form-input-med" autocomplete="not-applicable" />
				</div>
				<CslaValidationMessages WrapperId="NickNameMessages" WrapperClass="form-validation-messages" 
										For="() => ViewModel.Model.NickName" />
			</div>
			<div class="form-field">
				<label for="KeyReference" class="form-label">KeyReference:</label>
				<div class="form-input-container">
					<InputText Id="KeyReference" @bind-Value="ViewModel.Model.KeyReference" aria-describedby="KeyReferenceMessages" 
								class="form-input form-input-med" autocomplete="not-applicable" />
				</div>
				<CslaValidationMessages WrapperId="KeyReferenceMessages" WrapperClass="form-validation-messages" 
										For="() => ViewModel.Model.KeyReference" />
			</div>
		</div>
		<div class="form-buttons">
			<input type="submit" class="btn btn-primary" value="Save" />
			<button type="button" @onclick="ViewModel.CancelModelEdit" class="btn btn-outline-secondary">Cancel</button>
		</div>
	</EditForm>
</div>

@code {

	[Parameter]
	public ManageVehiclesViewModel ViewModel { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
	}

}
